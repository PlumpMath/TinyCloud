// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package master;

service Master {
    // Return Type: String
    // Return Format: IP:Port_Number
    // Getting A Address Of A Specified User
    rpc GetUserAddr (UserNameRequest) returns (AddressReply) {}

    // Return Type: Empty
    // Create A New User, Assign Node Internally
    rpc CreateUser (UserNameRequest) returns (Empty) {}

    // Return Type: Map<string, string>
    // Return The Status Of Each Node
    rpc GetNodesStatus (Empty) returns (NodesStatusReply) {}

    // Return Type: Map<string, string>
    // Return The Users List For Each Node
    rpc GetNodesInfo (Empty) returns (NodesInfoReply) {}

    // Return Type: Empty
    // Disable One Node As Requested
    rpc DisableNode (NodeIndexRequest) returns (Empty) {}
}

message UserNameRequest {
    string username = 1;
}

message AddressReply {
    string addr = 1;
}

message NodesStatusReply {
    map<string, bool> nodesstatus = 1;
}

message NodeIndexRequest {
    uint64 index = 1;
}

message NodeInfo {
    string user_list = 1;
    uint64 user_number = 2;
}

message NodesInfoReply {
    map<string, NodeInfo> nodeinfo = 1;
}

message Empty {

}